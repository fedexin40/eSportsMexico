<?php
		define('TEMPORADA_INACTIVA', 0);
		define('TEMPORADA_ACTIVA', 1);
		define('TEMPORADA_CERRADA', 2);
/**
 * @file
 * This is an example outlining how a module can be used to display a
 * custom page at a given URL.
 */
/**
 * Implementation of hook_perm().
 *
 * Since the access to our new custom pages will be granted based on
 * special permissions, we need to define what those permissions are here.
 * This ensures that they are available to enable on the user role
 * administration pages.
 */
function base_datos_externa_perm( ) {
		return array('acceder a temporada', 'administrar bd', 'acceder a modalidades', 'acceder a mapas', 'acceder a juegos', 'view comunity');
}
/**
	* Implementation of hook_menu().
	*
	* Since the access to our new custom pages will be granted based on
	* special permissions, we need to define what those permissions are here.
	* This ensures that they are available to enable on the user role
	* administration pages.
*/
function base_datos_externa_menu( ) {
  $items = array( );

  $items['admin/base_datos_externa'] = array(
    'title' => 'Administrar Liga',
		'description' => t( 'Administrar las Temporadas, Modalidades, Equipos y mas...' ),
		'page callback' => 'bd_admin_panel',
		'access arguments'	=> array( 'administer site configuration' ),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'inc/admin_panel.inc',
  );
  
	//////////////////////////////PLATAFORMAS
	//Una página para listar e insertar plataformas
	$items['admin/base_datos_externa/plataformas'] = array(
    'title' => 'Plataformas',
		'description' => t('Perminet definir las plataformas de juego disponibles para la liga.'),
		'page callback' => 'plataforma_admin',
		'access arguments' => array( 'administrar bd' ),	
		'type' => MENU_NORMAL_ITEM,
		'file' => 'inc/pages_plataformas.inc',
		'weight' => -100,
  );
	//Inserta información en la tabla plataforma
  $items['admin/base_datos_externa/plataformas/insertar'] = array(
    'title' => 'Insertar',
    'page callback' => 'drupal_get_form',
		'page arguments' => array( 'plataforma_admin_insertar' ),
		'access arguments' => array( 'administrar bd' ),	
		'type' => MENU_CALLBACK,
		'file' => 'inc/pages_plataformas.inc',
  );
	//Otra página para editar plataformas
  $items[ 'admin/base_datos_externa/plataformas/%/editar' ] = array(
		'title' => 'Editar plataforma',
		'page_callback' => 'drupal_get_form',
		'page arguments' => array( 'plataforma_admin_editar' ),
		'access arguments' => array( 'administrar bd' ),
		'type' => MENU_CALLBACK,
		'file' => 'inc/pages_plataformas.inc',
  );
	
	/////////////////////////////////////MODALIDADES DE JUEGOS
	//Una página para listar e insertar modalidades de juegos
	$items['admin/base_datos_externa/modalidades'] = array(
		'title' => 'Modalidades',
		'description' => t('Permite definir las modalidades de juego disponibles dentro de la liga'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array( 'modalidad_juego_admin' ),
		'access arguments' => array( 'administrar bd' ),	
		'type' => MENU_NORMAL_ITEM,
		'file' => 'inc/pages_modalidades_juegos.inc',
		'weight' => -10,
	);	
	//Una página para probar los botones de la modalidad de juego
	$items['admin/base_datos_externa/modalidades/listar'] = array(
		'title' => 'Listar',
		'page callback' => 'modalidades_juegos_admin_listar',
		'access arguments' => array( 'administrar bd' ),	
		'type' => MENU_LOCAL_TASK,
		'file' => 'inc/pages_modalidades_juegos.inc',
	);
	//Inserta información en la tabla modalidad de juego
	$items['admin/base_datos_externa/modalidades/insertar'] = array(
		'title' => 'Insertar',
		'page callback' => 'drupal_get_form',
		'page arguments' => array( 'modalidades_juegos_admin_insertar' ),
		'access arguments' => array( 'administrar bd' ),	
		'type' => MENU_CALLBACK,
		'file' => 'inc/pages_modalidades_juegos.inc',
	);
	//Otra página para editar modalidades de juegos
	$items[ 'admin/base_datos_externa/modalidades/%/editar' ] = array(
		'title' => 'Editar modalidad de juego',
		'page_callback' => 'drupal_get_form',
		'page arguments' => array( 'modalidad_juego_admin_editar' ),
		'access arguments' => array( 'administrar bd' ),
		'type' => MENU_CALLBACK,
		'file' => 'inc/pages_modalidades_juegos.inc',
	);
	
	////////////////////TEMPORADA
  $items[ 'admin/base_datos_externa/temporada' ] = array (
    'title' => 'Temporadas',
		'description' => t('Permite administrar las fechas de inicio y fin de cada temporada y sus caracteristicas,'),
    'page callback' => 'temporada_admin',
		'access arguments' => array( 'administrar bd' ),	
		'type' => MENU_NORMAL_ITEM,
		'file' => 'inc/pages_temporadas.inc',
		'weight' => -7,
  );
	//Una página para listar la temporada
  $items['admin/base_datos_externa/temporada/listar'] = array (
    'title' => 'Temporada Activa',
    'page callback' => 'temporada_activa_listar',
		'access arguments' => array( 'administrar bd' ),	
		'type' => MENU_LOCAL_TASK,
		'file' => 'inc/pages_temporadas.inc',
		'weight' => 1,
  );
	//Una página para insetar la temporada
  $items['admin/base_datos_externa/temporada/historial'] = array (
    'title' => 'Historial',
    'page callback' => 'temporadas_admin_listar',
		'access arguments' => array( 'administrar bd' ),	
		'type' => MENU_LOCAL_TASK,
		'file' => 'inc/pages_temporadas.inc',
		'weight' => 2,
  );
	//Otra página para insertar temporadas
	$items['admin/base_datos_externa/temporada/insertar'] = array (
    'title' => 'Nueva Temporada',
    'page callback' => 'drupal_get_form',
		'page arguments' => array( 'temporadas_admin_insertar' ),
		'access arguments' => array( 'administrar bd' ),	
		'type' => 	MENU_CALLBACK,
		'file' => 'inc/pages_temporadas.inc',
	);
	//Otra página para editar temporadas
	$items['admin/base_datos_externa/temporada/editar/%'] = array (
    'title' => 'Editar Temporada',
    'page callback' => 'drupal_get_form',
		'page arguments' => array( 'temporada_admin_editar' ),
		'access arguments' => array( 'administrar bd' ),	
		'type' => 	MENU_CALLBACK,
		'file' => 'inc/pages_temporadas.inc',
	);
	//Otra página para desactivar temporadas
	$items['admin/base_datos_externa/temporada/desactivar/%'] = array (
    'title' => 'Cerrar Temporada',
    'page callback' => 'drupal_get_form',
		'page arguments' => array( 'temporada_admin_desactivar' ),
		'access arguments' => array( 'administrar bd' ),	
		'type' => 	MENU_CALLBACK,
		'file' => 'inc/pages_temporadas.inc',
	);
	//Confirmación
	$items['admin/base_datos_externa/temporada/activar/%'] = array(
    'title' => 'Confirmar operación',
    'page callback' => 'drupal_get_form',
		'page arguments' => array( 'temporada_admin_activar' ),
		'access arguments' => array( 'administrar bd' ),	
		'type' => MENU_CALLBACK,
		'file' => 'inc/pages_temporadas.inc',
  );

	/////////////////////////////MODALIDADES DE JUEGOS POR TEMPORADA
	//Una página para listar e insertar modalidades de juegos por temporada
	$items['admin/base_datos_externa/temporada/%/modalidades'] = array(
    'title' => 'Modalidades de los juegos por temporadas',
    'page callback' => 'drupal_get_form',
		'page arguments' => array( 'modalidades_temporada' ),
		'access arguments' => array( 'administrar bd' ),	
		'type' => MENU_CALLBACK,
		'file' => 'inc/pages_modalidades_juegos_temporadas.inc',
  );	
	//Otra página para editar modalidades de juegos
	$items[ 'admin/base_datos_externa/temporada/%/modalidades/%/desactivar' ] = array(
		'title' => 'Eliminar modalidad de juego por temporada',
		'page_callback' => 'drupal_get_form',
		'page arguments' => array( 'desactivar_modalidades_temporada' ),
		'access arguments' => array( 'administrar bd' ),
		'type' => MENU_CALLBACK,
		'file' => 'inc/pages_modalidades_juegos_temporadas.inc',
	);
	
	//////////////////////MAPAS
	//Una página para plistar los mapas
  $items['admin/base_datos_externa/modalidades/%/editar/mapas'] = array(
    'title' => 'Mapas',
    'page callback' => 'mapas_admin_listar',
		'access arguments' => array( 'administrar bd' ),	
		'type' => MENU_LOCAL_TASK,
		'file' => 'inc/pages_mapas.inc',
  );
	//Inserta información en la tabla mapa
  $items['admin/base_datos_externa/modalidades/%/mapas/insertar'] = array(
    'title' => 'Insertar',
    'page callback' => 'drupal_get_form',
		'page arguments' => array( 'mapas_admin_insertar' ),
		'access arguments' => array( 'administrar bd' ),	
		'type' => MENU_CALLBACK,
		'file' => 'inc/pages_mapas.inc',
  );
	//Otra página para editar mapas
	$items[ 'admin/base_datos_externa/modalidades/%/mapas/%/editar' ] = array(
		'title' => 'Editar mapa',
		'page_callback' => 'drupal_get_form',
		'page arguments' => array( 'mapa_admin_editar' ),
		'access arguments' => array( 'administrar bd' ),
		'type' => MENU_CALLBACK,
		'file' => 'inc/pages_mapas.inc',	
	);
	//Otra página para eliminar mapas
	$items[ 'admin/base_datos_externa/modalidades/%/mapas/%/eliminar' ] = array(
		'title' => 'Editar mapa',
		'page_callback' => 'drupal_get_form',
		'page arguments' => array( 'mapa_admin_eliminar' ),
		'access arguments' => array( 'administrar bd' ),
		'type' => MENU_CALLBACK,
		'file' => 'inc/pages_mapas.inc',	
	);
	
	//////////////////////MODOS DE JEGO
	$items['admin/base_datos_externa/modalidades/%/modos'] = array(
    'title' => 'Modos de juego',
    'page callback' => 'drupal_get_form',
		'page arguments' => array( 'modos_juego_admin_listar' ),
		'access arguments' => array( 'administrar bd' ),	
		'type' => MENU_LOCAL_TASK,
		'file' => 'inc/pages_modos_juego.inc',
  );
	//Inserta información en la tabla Modo_Juego
  $items['admin/base_datos_externa/modalidades/%/modos/insertar'] = array(
    'title' => 'Insertar',
    'page callback' => 'drupal_get_form',
		'page arguments' => array( 'modos_juego_admin_insertar' ),
		'access arguments' => array( 'administrar bd' ),	
		'type' => MENU_CALLBACK,
		'file' => 'inc/pages_modos_juego.inc',
  );
	//Otra página para editar modos de juego
	$items[ 'admin/base_datos_externa/modalidades/%/modos/%/editar' ] = array(
		'title' => 'Editar mapa',
		'page_callback' => 'drupal_get_form',
		'page arguments' => array( 'modos_juego_admin_editar' ),
		'access arguments' => array( 'administrar bd' ),
		'type' => MENU_CALLBACK,
		'file' => 'inc/pages_modos_juego.inc',
	);
	//Otra página para eliminar modos de juego
	$items[ 'admin/base_datos_externa/modalidades/%/modos/%/eliminar' ] = array(
		'title' => 'Editar mapa',
		'page_callback' => 'drupal_get_form',
		'page arguments' => array( 'modos_juego_admin_eliminar' ),
		'access arguments' => array( 'administrar bd' ),
		'type' => MENU_CALLBACK,
		'file' => 'inc/pages_modos_juego.inc',
	);
	
	//Define la subpestaña principal
	$items[ 'taxonomy/term/%/home' ] = array(
		'title' => t('Ver'),
		'type' => MENU_DEFAULT_LOCAL_TASK,
		'weight' => -100,
	);
	$items[ 'taxonomy/term/%/comunity' ] = array(
    'title' => t('Comunity'),
		'page callback' => 'taxonomy_term_comunity',
		'access arguments'	=> array( 'view comunity' ),
		'type' => MENU_LOCAL_TASK,
		'file' => 'inc/taxonomy_term_pages.inc',
	);
	
  return $items;
}
/**
 * Implementación del hoock theme
 */
function base_datos_externa_theme() {
    return array (
        'modalidades' => array (
            'arguments' => array ('form' => NULL),
            'file' => '/theme/modalidades.inc',
        ),
    );
}
/**
 *	Convierte timestamp de y a tipo date
 */
function string_to_timestamp( $fecha ) {
	
	$user_timezone_name = date_default_timezone_name( TRUE );
	//drupal_set_message('user timezone name = '. $user_timezone_name);

	//$text_date = '2010-02-14';
	
	//drupal_set_message('start date = '. $fecha );

	// Convert the user entered date into a PHP 5 DateTime object
	$local_date = new DateTime( $fecha );

	// Reformat the user entered date into an ISO date that date_make_date() will accept
	$iso_date_string = date_format_date($local_date, 'custom', 'Y-m-d');
	//drupal_set_message('iso date_string = '. $iso_date_string);

	// Create a DateTime object with the user's timezone info
	$utc_date = date_make_date($iso_date_string, $user_timezone_name, DATE_DATETIME );

	// Change the timezone to UTC
	date_timezone_set($utc_date, timezone_open('UTC'));

	// Format the UTC version of the DateTime for use in node->save()
	$utc_date_string = date_format_date($utc_date, 'custom', 'Y-m-d');
	//drupal_set_message('utc date string = '. $utc_date_string);

	// convert to timestamp
	$timestamp = strtotime( $utc_date_string );
	//drupal_set_message('timestamp = '. $timestamp );

	return $timestamp;
	
}

/**
 *	Convierte de timestamp to string
 *	@param result set es el reultado de un query con la fecha en timestamp
 */
function timestamp_to_string( $result_set_timestamp ) {
	//drupal.org/node/291799
	//Convert back to string
	
	$user_timezone_name = date_default_timezone_name( TRUE );
	
	$new_timestamp = date( 'Y-m-d', $result_set_timestamp );
	
	// ok, so now get back to the user timezone
	$type = DATE_DATETIME;
	
	$new_timestamp = date_make_date( $new_timestamp, 'UTC', $type );
	
	date_timezone_set( $new_timestamp, timezone_open( $user_timezone_name ) );
	
	$timestamp = date_format_date( $new_timestamp, 'custom', 'Y-m-d' );
	
	
	return $timestamp;
}
/*
 *  Función para verificar si un término pertenece al vocabulario definido para las modalidad
 *  y si dicha modalidad está activa en la temporada actual
 *  Regresa un objeto con la modalidad si está activa o NULL si no está activa
 */
function term_is_active( $tid ) {
	$modalidad  = NULL;
	$temporada_activa = temporada_activa();
	
	db_set_active ('eSM');
	$modalidades_activas = db_query('SELECT {tid}, {Nombre}, {Maximo_Jugadores}, {Minimo_Jugadores}, {id_Modalidad_Juego_Temporada}, {identificador} FROM {Modalidad_Juego} AS m INNER JOIN {Modalidad_Juego_Temporada} AS t ON {m.id_Modalidad_Juego} = {t.id_Modalidad_Juego}  WHERE {id_Temporada} = %d', $temporada_activa->id_Temporada);
	db_set_active ('default');
	
	while ( $result = db_fetch_object($modalidades_activas) ) {
		
		//dpm( $result );
		if ($result->tid == $tid) {
				$modalidad = $result;
				break;
		}
	}
	
	//drupal_set_message( $modalidad );
	
	return $modalidad;
}
/*
 * Función para obtener la temporada activa
 * devuelve un objeto con todas las características de la temproada activa
 * o NULL si no existe temporada activa
 */
function temporada_activa() {
	$temporada_activa = NULL;
	db_set_active ('eSM');
		$temporada_activa = db_fetch_object( db_query('SELECT * FROM {Temporada} WHERE {Estado} = %d', 1 ) );
	db_set_active ('default');
	return $temporada_activa;
}

/**
 * Función para obtener los datos de una modalidad
 * teniendo como base el id_Modalidad_Juego_Temporada
 * devuelve un objeto con todas las características de una modalidad
 */
function get_modalidad( $id_Modalidad_Juego_Temporada ){
	db_set_active('eSM');
		$modalidad = db_fetch_object(db_query('SELECT * FROM {Modalidad_Juego} AS m INNER JOIN {Modalidad_Juego_Temporada} AS t ON m.{id_Modalidad_Juego} = t.{id_Modalidad_Juego} WHERE t.{id_Modalidad_Juego_Temporada} = %d', $id_Modalidad_Juego_Temporada));
	db_set_active('default');
	return $modalidad;
}
/**
 * Función para obtener todas las modalidades activas
 * en la temporada activa.
 * Devuelve NULL si no hay temporada activa
 * o si no hay ninguna modalidad activa.
 * o devuelve un arreglo de objetos conteniendo
 * todas las modalidades activas.
 */
function get_modalidades_activas (){
    $temporada = temporada_activa();   //Obtiene la temporada activa actual
    
    if (isset($temporada)) {
        db_set_active('eSM');
            $result = db_query('SELECT * FROM {Modalidad_Juego_Temporada} WHERE id_Temporada = %d', $temporada->id_Temporada);
        db_set_active('default');
        $count = 0;
        while ($modalidad_activa = db_fetch_object($result)) {
            ++$count;
            $modalidad = get_modalidad($modalidad_activa->id_Modalidad_Juego_Temporada);
            if (isset($modalidad))
                $modalidades[] = $modalidad;
        }
        if ($count == 0)
            return NULL;
        else
            return $modalidades;
    }
    else {
        return NULL;
    }
}

/**
 * Función para obtener la modalidad a la que
 * pertenece un id_Modalidad_Juego_Temporada específico
 *
 * @param
 * 	id_Modalidad_Juego_Temporada
 *
 * @return
 * 	NULL si no existe el id_Modalidad_Juego_Temporada
 * 	Objeto Temporada con los datos de la temporada a la que pertenece el id_Modalidad_Juego_Temporada dado
 */
function temporada_from_id_Modalida_Juego_Temporada ($id_Modalidad_Juego_Temporada) {
  db_set_active('eSM');
    $result = db_fetch_object(db_query('SELECT * FROM {Temporada} AS t INNER JOIN {Modalidad_Juego_Temporada} AS mjt ON t.id_Temporada = mjt.id_Temporada WHERE mjt.id_Modalidad_Juego_Temporada = %d', $id_Modalidad_Juego_Temporada));
  db_set_active('default');
  
  return $result;
}

/**
 * Función para obtener los mapas de una modalidad
 *
 * @param
 * 	id_Modalidad_Juego
 *
 * @return
 * 	$mapas [id_Mapa] = Nombre
 */
function mapas_get_mapas_modalidad ($id_Modalidad_Juego) {
  db_set_active('eSM');
    $result = db_query('SELECT * FROM {Mapa} WHERE id_Modalidad_Juego = %d', $id_Modalidad_Juego);
  db_set_active('default');
  
  while ($mapa = db_fetch_object($result)) {
    $mapas[$mapa->id_Mapa] = $mapa->id_Mapa;
  }
  return $mapas;
}
/**
 * Función para obtener los modos de juego de una modalidad
 *
 * @param
 * 	id_Modalidad_Juego
 *
 * @return
 * 	$mapas [id_Mapa] = Nombre
 */
function modos_get_modos_modalidad ($id_Modalidad_Juego) {
  db_set_active('eSM');
    $result = db_query('SELECT * FROM {Modo_Juego} WHERE id_Modalidad_Juego = %d', $id_Modalidad_Juego);
  db_set_active('default');
  
  while ($modo = db_fetch_object($result)) {
    $modos[$modo->id_Modo_Juego] = $modo->id_Modo_Juego;
  }
  return $modos;
}
/**
 * Función para obtener los modos de juego de una modalidad
 *
 * @param
 * 	id_Modalidad_Juego
 *
 * @return
 * 	$mapas [id_Mapa] = Nombre
 */
function _mapas_get_mapas_nombre ($id_Mapa) {
  db_set_active('eSM');
    $result = db_fetch_array(db_query('SELECT * FROM {Mapa} WHERE id_Mapa = %d', $id_Mapa));
  db_set_active('default');
  
  return $result['Nombre'];
}
/**
 * Función para obtener los modos de juego de una modalidad
 *
 * @param
 * 	id_Modalidad_Juego
 *
 * @return
 * 	$mapas [id_Mapa] = Nombre
 */
function _modos_get_modos_nombre ($id_Modo_Juego) {
  db_set_active('eSM');
    $result = db_fetch_array(db_query('SELECT * FROM {Modo_Juego} WHERE id_Modo_Juego = %d', $id_Modo_Juego));
  db_set_active('default');
  
  return $result['Nombre'];
}